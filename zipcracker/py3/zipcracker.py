#!/usr/env/python3

import sys 
import threading 
import zipfile 
import getopt

def usage():
    print("Zipcracker - Dictionary attack against zip folders")
    print()
    print("Usage: zipcracker -f [zipfolder] -d [dictionary file]")
    print()
    print("{} - Target zip file".format("\t-f --file".ljust(20," ")))
    print("{} - Target zip file".format("\t-d --dictionary".ljust(20," ")))
    print()


def main():
    file = None
    dictionary = None

    if not len(sys.argv) > 1:
        usage()
        sys.exit(1)

    try: 
        opts,args = getopt.getopt(sys.argv[1:],"f:d:",["file","dictionary"])
    except getopt.GetoptError as e:
        print(str(e))
        usage()
        sys.exit(1)

    for o,a in opts:
        if o in ("-f","--file"):
            file = zipfile.ZipFile(a)
        elif o in ("-d","--dictionary"):
            dictionary = open(a)
        else:
            print("[!] Invalid option {} with value {}".format(o,a))
            sys.exit(1)

def  attemptExtract(file, password):
    try:
        file.extractAll(pwd=password)
        print("[+] Password found: {}".format(password))
    except:
        pass


if __name__ == '__main__':
    main()