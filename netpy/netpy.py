#!/usr/env/python3

import sys
import socket 
import getopt
import threading 
import subprocess 

# Some globals (to be replaced later)
listen = False
command = False
upload = False
execute = ""
target = ""
upload_destination = ""
port = 0

def usage():
    print("NetPy - a simple drop in netcat replacement")
    print()
    print("Usage: netpy.py -t target_host -p target_port")
    print()
    print("Optional flags:")
    print("{} - listen on <host>:<port> for incoming connections".format("\t-l --listen".ljust(20," ")))
    print("{} - execute the selected file when is connection received".format("\t-e --execute=file".ljust(20," ")))
    print("{} - create a command shell".format("\t-s --shell".ljust(20," ")))
    print("{} - upload file to <dest> when connection is received".format("\t-u --upload=dest".ljust(20," ")))
    print()

    sys.exit(0)


def main():
    global listen
    global command
    global upload
    global execute
    global target
    global upload_destination
    global port

    # Detect if params are missing, if they are show usage
    if not len(sys.argv) > 1:
        usage()

    # Get the options
    try: 
        opts,args = getopt.getopt(sys.argv[1:],"hle:t:p:su",["help","listen","execute","target","port","shell","upload"])
    except getopt.GetoptError as e:
        print(str(e))
        usage()

    for o,a in opts:
        if o in ("-h","--help"):
            usage()
        elif o in ("-l","--listen"):
            listen = True;
        elif o in ("-s","--shell"):
            command = True
        elif o in ("-u","--upload"):
            upload_destination = a
        elif o in ("-t","--target"):
            target = a
        elif o in ("-p","--port"):
            port = int(a)
        else:
            print("Invalid option {} with value {}".format(o,a))
            sys.exit(1)