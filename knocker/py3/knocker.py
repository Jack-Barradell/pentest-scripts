# TODO:
# * Add ability to specify method on a per port basis

import os
import sys
import getopt
import socket
import time


METHOD_TCP = 0
METHOD_UDP = 1
DEFAULT_METHOD = METHOD_TCP
DEFAULT_TIMEOUT = 250
DEFAULT_DELAY = 250

def usage():
    print ("Kncoker - Port Knocking Tool")
    print()
    print("Flags:")
    print("{} - IP address of target machine".format("\t-h --host".ljust(20," ")))
    print("{} - Colon (:) seperated list of ports, in order to be knocked".format("\t-p --ports".ljust(20," ")))
    print("{} - Time til timeout on connection in milliseconds, (Default: 250)".format("\t-t --timeout".ljust(20," ")))
    print("{} - Delay bewtween ports in milliseconds (Default: 250)".format("\t-d --delay".ljust(20," ")))
    print("{} - Use UDP".format("\t-u --udp".ljust(20," ")))
    print()


def main():
    method = DEFAULT_METHOD
    target_host = ""
    ports = []
    timeout = DEFAULT_TIMEOUT
    delay = DEFAULT_DELAY
    method = DEFAULT_METHOD

    if not len(sys.argv) > 1:
        usage()

    try: 
        opts,args = getopt.getopt(sys.argv[1:],"h:p:t:d:u",["help","ports","timeout","delay","udp"])
    except getopt.GetoptError as e:
        print(str(e))
        usage()
    for o,a in opts:
        if o in ("-h","--host"):
            target_host = a
        elif o in ("-p","--ports"):
            port_strings = a.split(":")
            ports = [int(x) for x in port_strings]
        elif o in ("-t","--timeout"):
            timeout = int(a)
        elif o in ("-d","--delay"):
            delay = int(a)
        elif o in ("-u","--udp"):
            method = METHOD_UDP
        else:
            print("[!] Invalid option {} wit value {}".format(o,a))
            sys.exit(1)
        
    exit = False
    if not target_host:
        print("[!] Must provide host with -h or --host")
        exit = True
    if not ports:
        print("[!] Must provide ports with -p or --ports")
        exit = True
    if exit:
        sys.exit(0)

    print("[+] Beginning knocking against {}".format(target_host))

    for port in ports:

        soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM if method == METHOD_TCP else socket.SOCK_DGRAM)
        socket_address = (target_host, port)

        if method == METHOD_TCP:
            print("[+] Knocking on port {} with method: tcp".format(port))
            soc.settimeout(timeout / 1000)
            soc.connect_ex(socket_address)
        else:
            print("[+] Knocking on port {} with method: udp".format(port))
            soc.sendto(b'', socket_address)

        soc.close()
         
        time.sleep(delay / 1000) 

    print("[+] Knocking complete")

if __name__ == '__main__':
    main()
